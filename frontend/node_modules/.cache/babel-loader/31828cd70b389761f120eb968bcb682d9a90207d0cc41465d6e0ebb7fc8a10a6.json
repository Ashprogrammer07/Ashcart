{"ast":null,"code":"import _objectSpread from\"/home/ashwin/Documents/GitHub/Ashcart/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{createSlice}from\"@reduxjs/toolkit\";const authSlice=createSlice({name:'auth',initialState:{loading:true,isauthenticated:false},reducers:{LoginRequest(state,action){return _objectSpread(_objectSpread({},state),{},{loading:true});},LoginSuccess(state,action){return{loading:false,isauthenticated:true,user:action.payload.user};},LoginFail(state,action){return _objectSpread(_objectSpread({},state),{},{loading:false,error:action.payload});},clearError(state,action){return _objectSpread(_objectSpread({},state),{},{error:null});},RegisterRequest(state,action){return _objectSpread(_objectSpread({},state),{},{loading:true});},RegisterSuccess(state,action){return{loading:false,isauthenticated:true,user:action.payload.user};},RegisterFail(state,action){return _objectSpread(_objectSpread({},state),{},{loading:false,error:action.payload});},loaduserRequest(state,action){return _objectSpread(_objectSpread({},state),{},{isauthenticated:false,loading:true});},loaduserSuccess(state,action){return{loading:false,isauthenticated:true,user:action.payload.user};},loaduserFail(state,action){return _objectSpread(_objectSpread({},state),{},{loading:false});},logoutSuccess(state,action){return{loading:false,isauthenticated:false};},logoutFail(state,action){return _objectSpread(_objectSpread({},state),{},{error:action.payload});},updateprofileRequest(state,action){return _objectSpread(_objectSpread({},state),{},{loading:true});},updateprofileSuccess(state,action){return _objectSpread(_objectSpread({},state),{},{loading:false,user:action.payload.user,isupdated:true});},updateprofileFail(state,action){return _objectSpread(_objectSpread({},state),{},{loading:false,error:action.payload});},clearUpdateProfile(state,action){return _objectSpread(_objectSpread({},state),{},{isUpdated:false});},updatepasswordRequest(state,action){return _objectSpread(_objectSpread({},state),{},{loading:true,isupdated:false});},updatepasswordSuccess(state,action){return _objectSpread(_objectSpread({},state),{},{loading:false,isupdated:true});},updatepasswordFail(state,action){return _objectSpread(_objectSpread({},state),{},{loading:false,error:action.payload});},clearUpdateProfile(state,action){return _objectSpread(_objectSpread({},state),{},{isupdated:false});},forgotpasswordRequest(state,action){return _objectSpread(_objectSpread({},state),{},{loading:true,message:null});},forgotpasswordSuccess(state,action){return _objectSpread(_objectSpread({},state),{},{loading:false,isupdated:true,message:action.payload.message});},forgotpasswordFail(state,action){return _objectSpread(_objectSpread({},state),{},{loading:false,error:action.payload});},resetpasswordRequest(state,action){return _objectSpread(_objectSpread({},state),{},{loading:true,isupdated:false});},resetpasswordSuccess(state,action){return _objectSpread(_objectSpread({},state),{},{loading:false,isauthenticated:true,user});},resetpasswordFail(state,action){return _objectSpread(_objectSpread({},state),{},{loading:false,error:action.payload});}}});const{actions,reducer}=authSlice;export const{LoginRequest,LoginSuccess,LoginFail,clearError,RegisterRequest,RegisterSuccess,RegisterFail,loaduserRequest,loaduserSuccess,loaduserFail,logoutFail,logoutSuccess,updateprofileFail,updateprofileRequest,updateprofileSuccess,clearUpdateProfile,updatepasswordFail,updatepasswordRequest,updatepasswordSuccess,forgotpasswordFail,forgotpasswordRequest,forgotpasswordSuccess,resetpasswordFail,resetpasswordRequest,resetpasswordSuccess}=actions;export default reducer;","map":{"version":3,"names":["createSlice","authSlice","name","initialState","loading","isauthenticated","reducers","LoginRequest","state","action","_objectSpread","LoginSuccess","user","payload","LoginFail","error","clearError","RegisterRequest","RegisterSuccess","RegisterFail","loaduserRequest","loaduserSuccess","loaduserFail","logoutSuccess","logoutFail","updateprofileRequest","updateprofileSuccess","isupdated","updateprofileFail","clearUpdateProfile","isUpdated","updatepasswordRequest","updatepasswordSuccess","updatepasswordFail","forgotpasswordRequest","message","forgotpasswordSuccess","forgotpasswordFail","resetpasswordRequest","resetpasswordSuccess","resetpasswordFail","actions","reducer"],"sources":["/home/ashwin/Documents/GitHub/Ashcart/frontend/src/slices/authSlices.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState: {\n        loading: true,\n        isauthenticated: false\n    },\n    reducers: {\n        LoginRequest(state, action){\n            return {\n                ...state,\n                loading: true,\n            }\n        },\n        LoginSuccess(state, action){\n            return {\n                loading: false,\n                isauthenticated: true,\n                user: action.payload.user\n            }\n        },\n        LoginFail(state, action){\n            return {\n                ...state,\n                loading: false,\n                error:  action.payload\n            }\n        },\n        clearError(state, action){\n            return {\n                ...state,\n                error:  null\n            }\n        },\n        RegisterRequest(state, action){\n            return {\n                ...state,\n                loading: true,\n            }\n        },\n        RegisterSuccess(state, action){\n            return {\n                loading: false,\n                isauthenticated: true,\n                user: action.payload.user\n            }\n        },\n        RegisterFail(state, action){\n            return {\n                ...state,\n                loading: false,\n                error:  action.payload\n            }\n        },\n        loaduserRequest(state, action){\n            return {\n                ...state,\n                isauthenticated: false,\n                loading: true,\n            }\n        },\n        loaduserSuccess(state, action){\n            return {\n                loading: false,\n                isauthenticated: true,\n                user: action.payload.user\n            }\n        },\n        loaduserFail(state, action){\n            return {\n                ...state,\n                loading: false,\n            }\n        },\n        \n        logoutSuccess(state, action){\n            return {\n                loading: false,\n                isauthenticated: false,\n            }\n        },\n        logoutFail(state, action){\n            return {\n                ...state,\n                error:action.payload\n            }\n        },\n       updateprofileRequest(state, action){\n            return {\n                ...state,\n                loading: true,\n            }\n        },\n        updateprofileSuccess(state, action){\n            return {...state,\n                loading: false,\n                user: action.payload.user,\n                isupdated:true\n               \n            }\n        },\n        updateprofileFail(state, action){\n            return {\n                ...state,\n                loading: false,\n                error:  action.payload\n            }\n        },\n        clearUpdateProfile(state, action){\n            return {\n                ...state,\n                isUpdated: false\n            }\n        },\n        updatepasswordRequest(state, action){\n            return {\n                ...state,\n                loading: true,\n                isupdated:false\n            }\n        },\n        updatepasswordSuccess(state, action){\n            return {...state,\n                loading: false,\n                isupdated:true\n               \n            }\n        },\n        updatepasswordFail(state, action){\n            return {\n                ...state,\n                loading: false,\n                error:  action.payload\n            }\n        },\n        clearUpdateProfile(state,action){\n            return {\n                ...state,\n                isupdated:false\n            }\n        },\n        forgotpasswordRequest(state, action){\n            return {\n                ...state,\n                loading: true,\n                message:null\n                \n        \n            }\n        },\n        forgotpasswordSuccess(state, action){\n            return {...state,\n                loading: false,\n                isupdated:true,\n                message:action.payload.message\n               \n            }\n        },\n        forgotpasswordFail(state, action){\n            return {\n                ...state,\n                loading: false,\n                error:  action.payload\n            }\n        },\n        resetpasswordRequest(state, action){\n            return {\n                ...state,\n                loading: true,\n                isupdated:false\n            }\n        },\n        resetpasswordSuccess(state, action){\n            return {...state,\n                loading: false,\n                isauthenticated:true,\n                user\n               \n            }\n        },\n        resetpasswordFail(state, action){\n            return {\n                ...state,\n                loading: false,\n                error:  action.payload\n            }\n        },\n\n\n        \n    }\n});\n\nconst { actions, reducer } = authSlice;\n\nexport const { \n    LoginRequest, \n    LoginSuccess, \n    LoginFail, \n    clearError,\n    RegisterRequest,\n    RegisterSuccess,\n    RegisterFail,\n    loaduserRequest,\n    loaduserSuccess,\n    loaduserFail,\n    logoutFail,\n    logoutSuccess,\n    updateprofileFail,\n    updateprofileRequest,\n    updateprofileSuccess,\n    clearUpdateProfile,\n    updatepasswordFail,updatepasswordRequest,updatepasswordSuccess,\n    forgotpasswordFail,forgotpasswordRequest,forgotpasswordSuccess,\n    resetpasswordFail,resetpasswordRequest,resetpasswordSuccess,\n    \n    \n    \n } = actions;\n\nexport default reducer;\n"],"mappings":"mIAAA,OAASA,WAAW,KAAQ,kBAAkB,CAG9C,KAAM,CAAAC,SAAS,CAAGD,WAAW,CAAC,CAC1BE,IAAI,CAAE,MAAM,CACZC,YAAY,CAAE,CACVC,OAAO,CAAE,IAAI,CACbC,eAAe,CAAE,KACrB,CAAC,CACDC,QAAQ,CAAE,CACNC,YAAYA,CAACC,KAAK,CAAEC,MAAM,CAAC,CACvB,OAAAC,aAAA,CAAAA,aAAA,IACOF,KAAK,MACRJ,OAAO,CAAE,IAAI,GAErB,CAAC,CACDO,YAAYA,CAACH,KAAK,CAAEC,MAAM,CAAC,CACvB,MAAO,CACHL,OAAO,CAAE,KAAK,CACdC,eAAe,CAAE,IAAI,CACrBO,IAAI,CAAEH,MAAM,CAACI,OAAO,CAACD,IACzB,CAAC,CACL,CAAC,CACDE,SAASA,CAACN,KAAK,CAAEC,MAAM,CAAC,CACpB,OAAAC,aAAA,CAAAA,aAAA,IACOF,KAAK,MACRJ,OAAO,CAAE,KAAK,CACdW,KAAK,CAAGN,MAAM,CAACI,OAAO,GAE9B,CAAC,CACDG,UAAUA,CAACR,KAAK,CAAEC,MAAM,CAAC,CACrB,OAAAC,aAAA,CAAAA,aAAA,IACOF,KAAK,MACRO,KAAK,CAAG,IAAI,GAEpB,CAAC,CACDE,eAAeA,CAACT,KAAK,CAAEC,MAAM,CAAC,CAC1B,OAAAC,aAAA,CAAAA,aAAA,IACOF,KAAK,MACRJ,OAAO,CAAE,IAAI,GAErB,CAAC,CACDc,eAAeA,CAACV,KAAK,CAAEC,MAAM,CAAC,CAC1B,MAAO,CACHL,OAAO,CAAE,KAAK,CACdC,eAAe,CAAE,IAAI,CACrBO,IAAI,CAAEH,MAAM,CAACI,OAAO,CAACD,IACzB,CAAC,CACL,CAAC,CACDO,YAAYA,CAACX,KAAK,CAAEC,MAAM,CAAC,CACvB,OAAAC,aAAA,CAAAA,aAAA,IACOF,KAAK,MACRJ,OAAO,CAAE,KAAK,CACdW,KAAK,CAAGN,MAAM,CAACI,OAAO,GAE9B,CAAC,CACDO,eAAeA,CAACZ,KAAK,CAAEC,MAAM,CAAC,CAC1B,OAAAC,aAAA,CAAAA,aAAA,IACOF,KAAK,MACRH,eAAe,CAAE,KAAK,CACtBD,OAAO,CAAE,IAAI,GAErB,CAAC,CACDiB,eAAeA,CAACb,KAAK,CAAEC,MAAM,CAAC,CAC1B,MAAO,CACHL,OAAO,CAAE,KAAK,CACdC,eAAe,CAAE,IAAI,CACrBO,IAAI,CAAEH,MAAM,CAACI,OAAO,CAACD,IACzB,CAAC,CACL,CAAC,CACDU,YAAYA,CAACd,KAAK,CAAEC,MAAM,CAAC,CACvB,OAAAC,aAAA,CAAAA,aAAA,IACOF,KAAK,MACRJ,OAAO,CAAE,KAAK,GAEtB,CAAC,CAEDmB,aAAaA,CAACf,KAAK,CAAEC,MAAM,CAAC,CACxB,MAAO,CACHL,OAAO,CAAE,KAAK,CACdC,eAAe,CAAE,KACrB,CAAC,CACL,CAAC,CACDmB,UAAUA,CAAChB,KAAK,CAAEC,MAAM,CAAC,CACrB,OAAAC,aAAA,CAAAA,aAAA,IACOF,KAAK,MACRO,KAAK,CAACN,MAAM,CAACI,OAAO,GAE5B,CAAC,CACFY,oBAAoBA,CAACjB,KAAK,CAAEC,MAAM,CAAC,CAC9B,OAAAC,aAAA,CAAAA,aAAA,IACOF,KAAK,MACRJ,OAAO,CAAE,IAAI,GAErB,CAAC,CACDsB,oBAAoBA,CAAClB,KAAK,CAAEC,MAAM,CAAC,CAC/B,OAAAC,aAAA,CAAAA,aAAA,IAAWF,KAAK,MACZJ,OAAO,CAAE,KAAK,CACdQ,IAAI,CAAEH,MAAM,CAACI,OAAO,CAACD,IAAI,CACzBe,SAAS,CAAC,IAAI,GAGtB,CAAC,CACDC,iBAAiBA,CAACpB,KAAK,CAAEC,MAAM,CAAC,CAC5B,OAAAC,aAAA,CAAAA,aAAA,IACOF,KAAK,MACRJ,OAAO,CAAE,KAAK,CACdW,KAAK,CAAGN,MAAM,CAACI,OAAO,GAE9B,CAAC,CACDgB,kBAAkBA,CAACrB,KAAK,CAAEC,MAAM,CAAC,CAC7B,OAAAC,aAAA,CAAAA,aAAA,IACOF,KAAK,MACRsB,SAAS,CAAE,KAAK,GAExB,CAAC,CACDC,qBAAqBA,CAACvB,KAAK,CAAEC,MAAM,CAAC,CAChC,OAAAC,aAAA,CAAAA,aAAA,IACOF,KAAK,MACRJ,OAAO,CAAE,IAAI,CACbuB,SAAS,CAAC,KAAK,GAEvB,CAAC,CACDK,qBAAqBA,CAACxB,KAAK,CAAEC,MAAM,CAAC,CAChC,OAAAC,aAAA,CAAAA,aAAA,IAAWF,KAAK,MACZJ,OAAO,CAAE,KAAK,CACduB,SAAS,CAAC,IAAI,GAGtB,CAAC,CACDM,kBAAkBA,CAACzB,KAAK,CAAEC,MAAM,CAAC,CAC7B,OAAAC,aAAA,CAAAA,aAAA,IACOF,KAAK,MACRJ,OAAO,CAAE,KAAK,CACdW,KAAK,CAAGN,MAAM,CAACI,OAAO,GAE9B,CAAC,CACDgB,kBAAkBA,CAACrB,KAAK,CAACC,MAAM,CAAC,CAC5B,OAAAC,aAAA,CAAAA,aAAA,IACOF,KAAK,MACRmB,SAAS,CAAC,KAAK,GAEvB,CAAC,CACDO,qBAAqBA,CAAC1B,KAAK,CAAEC,MAAM,CAAC,CAChC,OAAAC,aAAA,CAAAA,aAAA,IACOF,KAAK,MACRJ,OAAO,CAAE,IAAI,CACb+B,OAAO,CAAC,IAAI,GAIpB,CAAC,CACDC,qBAAqBA,CAAC5B,KAAK,CAAEC,MAAM,CAAC,CAChC,OAAAC,aAAA,CAAAA,aAAA,IAAWF,KAAK,MACZJ,OAAO,CAAE,KAAK,CACduB,SAAS,CAAC,IAAI,CACdQ,OAAO,CAAC1B,MAAM,CAACI,OAAO,CAACsB,OAAO,GAGtC,CAAC,CACDE,kBAAkBA,CAAC7B,KAAK,CAAEC,MAAM,CAAC,CAC7B,OAAAC,aAAA,CAAAA,aAAA,IACOF,KAAK,MACRJ,OAAO,CAAE,KAAK,CACdW,KAAK,CAAGN,MAAM,CAACI,OAAO,GAE9B,CAAC,CACDyB,oBAAoBA,CAAC9B,KAAK,CAAEC,MAAM,CAAC,CAC/B,OAAAC,aAAA,CAAAA,aAAA,IACOF,KAAK,MACRJ,OAAO,CAAE,IAAI,CACbuB,SAAS,CAAC,KAAK,GAEvB,CAAC,CACDY,oBAAoBA,CAAC/B,KAAK,CAAEC,MAAM,CAAC,CAC/B,OAAAC,aAAA,CAAAA,aAAA,IAAWF,KAAK,MACZJ,OAAO,CAAE,KAAK,CACdC,eAAe,CAAC,IAAI,CACpBO,IAAI,GAGZ,CAAC,CACD4B,iBAAiBA,CAAChC,KAAK,CAAEC,MAAM,CAAC,CAC5B,OAAAC,aAAA,CAAAA,aAAA,IACOF,KAAK,MACRJ,OAAO,CAAE,KAAK,CACdW,KAAK,CAAGN,MAAM,CAACI,OAAO,GAE9B,CAIJ,CACJ,CAAC,CAAC,CAEF,KAAM,CAAE4B,OAAO,CAAEC,OAAQ,CAAC,CAAGzC,SAAS,CAEtC,MAAO,MAAM,CACTM,YAAY,CACZI,YAAY,CACZG,SAAS,CACTE,UAAU,CACVC,eAAe,CACfC,eAAe,CACfC,YAAY,CACZC,eAAe,CACfC,eAAe,CACfC,YAAY,CACZE,UAAU,CACVD,aAAa,CACbK,iBAAiB,CACjBH,oBAAoB,CACpBC,oBAAoB,CACpBG,kBAAkB,CAClBI,kBAAkB,CAACF,qBAAqB,CAACC,qBAAqB,CAC9DK,kBAAkB,CAACH,qBAAqB,CAACE,qBAAqB,CAC9DI,iBAAiB,CAACF,oBAAoB,CAACC,oBAI1C,CAAC,CAAGE,OAAO,CAEZ,cAAe,CAAAC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}