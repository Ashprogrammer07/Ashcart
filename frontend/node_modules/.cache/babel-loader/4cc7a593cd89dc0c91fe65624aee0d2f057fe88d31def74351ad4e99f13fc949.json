{"ast":null,"code":"import{useSelector}from\"react-redux\";import{Navigate}from\"react-router-dom\";import Loader from'../layouts/loader';import{jsx as _jsx}from\"react/jsx-runtime\";export default function ProtectedRoute(_ref){let{children,isadmin}=_ref;const{isauthenticated,loading,user}=useSelector(state=>state.authState);if(!isauthenticated&&!loading){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}if(isauthenticated){if(isadmin==true&&user.role!=='admin'){return/*#__PURE__*/_jsx(Navigate,{to:\"/\"});}return children;}if(loading){return/*#__PURE__*/_jsx(Loader,{});}}","map":{"version":3,"names":["useSelector","Navigate","Loader","jsx","_jsx","ProtectedRoute","_ref","children","isadmin","isauthenticated","loading","user","state","authState","to","role"],"sources":["/home/ashwin/Documents/GitHub/Ashcart/frontend/src/components/route/protectedRoute.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport {Navigate } from \"react-router-dom\";\nimport Loader from '../layouts/loader';\nexport default function ProtectedRoute({children,isadmin}){\n    const {isauthenticated,loading,user}=useSelector(state => state.authState)\n \n    if(!isauthenticated && !loading){\n        return <Navigate to='/login'/>\n    }\n    if(isauthenticated ){\n        if(isadmin==true &&user.role !=='admin'){\n            return <Navigate to='/'/>\n        }\n    return children;}\n    if(loading){\n        return <Loader/>\n    }\n}"],"mappings":"AAAA,OAASA,WAAW,KAAQ,aAAa,CACzC,OAAQC,QAAQ,KAAQ,kBAAkB,CAC1C,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBACvC,cAAe,SAAS,CAAAC,cAAcA,CAAAC,IAAA,CAAoB,IAAnB,CAACC,QAAQ,CAACC,OAAO,CAAC,CAAAF,IAAA,CACrD,KAAM,CAACG,eAAe,CAACC,OAAO,CAACC,IAAI,CAAC,CAACX,WAAW,CAACY,KAAK,EAAIA,KAAK,CAACC,SAAS,CAAC,CAE1E,GAAG,CAACJ,eAAe,EAAI,CAACC,OAAO,CAAC,CAC5B,mBAAON,IAAA,CAACH,QAAQ,EAACa,EAAE,CAAC,QAAQ,CAAC,CAAC,CAClC,CACA,GAAGL,eAAe,CAAE,CAChB,GAAGD,OAAO,EAAE,IAAI,EAAGG,IAAI,CAACI,IAAI,GAAI,OAAO,CAAC,CACpC,mBAAOX,IAAA,CAACH,QAAQ,EAACa,EAAE,CAAC,GAAG,CAAC,CAAC,CAC7B,CACJ,MAAO,CAAAP,QAAQ,CAAC,CAChB,GAAGG,OAAO,CAAC,CACP,mBAAON,IAAA,CAACF,MAAM,GAAC,CAAC,CACpB,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}