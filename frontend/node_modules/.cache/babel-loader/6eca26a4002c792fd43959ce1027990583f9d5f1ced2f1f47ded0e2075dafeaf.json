{"ast":null,"code":"import{LoginRequest,LoginFail,LoginSuccess,clearError,RegisterRequest,RegisterSuccess,RegisterFail,loaduserRequest,loaduserSuccess,loaduserFail,logoutSuccess,logoutRequest,logoutFail,updateprofileRequest,updateprofileSuccess,updateprofileFail,updatepasswordRequest,updatepasswordFail,updatepasswordSuccess,forgotpasswordFail,forgotpasswordRequest,forgotpasswordSuccess,resetpasswordFail,resetpasswordRequest,resetpasswordSuccess}from\"../slices/authSlices\";import axios from\"axios\";import{clearCart}from'../slices/cartSlice';export const login=(email,password)=>async dispatch=>{try{dispatch(LoginRequest());const{data}=await axios.post('/api/v1/login',{email,password});// ✅ send as JSON\ndispatch(LoginSuccess(data));}catch(error){var _error$response,_error$response$data;dispatch(LoginFail(error===null||error===void 0?void 0:(_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message));}};export const clearAutherror=dispatch=>{dispatch(clearError);};export const register=userData=>async dispatch=>{try{dispatch(RegisterRequest());const config={headers:{'Content-type':'multipart/form-data'}};const{data}=await axios.post(\"/api/v1/register\",userData,config);dispatch(RegisterSuccess(data));}catch(error){var _error$response2,_error$response2$data;dispatch(RegisterFail(error===null||error===void 0?void 0:(_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message));}};export const loaduser=async dispatch=>{try{dispatch(loaduserRequest());const{data}=await axios.get('/api/v1/myprofile');dispatch(loaduserSuccess(data));}catch(error){dispatch(loaduserFail(error.response.data.message));}};export const logout=async dispatch=>{try{await axios.get('/api/v1/logout');dispatch(logoutSuccess());dispatch(clearCart());localStorage.removeItem('cartItem');}catch(error){var _error$response3,_error$response3$data;dispatch(logoutFail(error===null||error===void 0?void 0:(_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message));}};export const updateProfile=userData=>async dispatch=>{try{dispatch(updateprofileRequest());const config={headers:{'Content-Type':'multipart/form-data'}};const{data}=await axios.put(\"/api/v1/myprofile/update\",userData,config);dispatch(updateprofileSuccess(data));}catch(error){dispatch(updateprofileFail(error.response.data.message));}};export const updatePassword=userData=>async dispatch=>{try{dispatch(updatepasswordRequest());const config={headers:{'Content-Type':'application/json'}};await axios.put(\"/api/v1/password/change\",userData);dispatch(updatepasswordSuccess());}catch(error){dispatch(updatepasswordFail(error.response.data.message));}};export const forgotPassword=userData=>async dispatch=>{try{dispatch(forgotpasswordRequest());const config={headers:{'Content-Type':'application/json'}};const{data}=await axios.post(\"/api/v1/password/forgot\",userData,config);dispatch(forgotpasswordSuccess(data));// ✅ dispatch the message string\n}catch(error){var _error$response4,_error$response4$data;const message=((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||error.message||\"Something went wrong\";dispatch(forgotpasswordFail(message));}};export const resetPassword=(userData,token)=>async dispatch=>{try{dispatch(resetpasswordRequest());const config={headers:{'Content-Type':'application/json'}};const{data}=await axios.post(\"/api/v1/password/reset/\".concat(token),userData,config);dispatch(resetpasswordSuccess(data.message));// ✅ must be data.message\n}catch(error){var _error$response5,_error$response5$data;const message=((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||error.message||\"Something went wrong\";console.log(\"Reset Password Error:\",message);// ✅ Debug line\ndispatch(resetpasswordFail(message));}};","map":{"version":3,"names":["LoginRequest","LoginFail","LoginSuccess","clearError","RegisterRequest","RegisterSuccess","RegisterFail","loaduserRequest","loaduserSuccess","loaduserFail","logoutSuccess","logoutRequest","logoutFail","updateprofileRequest","updateprofileSuccess","updateprofileFail","updatepasswordRequest","updatepasswordFail","updatepasswordSuccess","forgotpasswordFail","forgotpasswordRequest","forgotpasswordSuccess","resetpasswordFail","resetpasswordRequest","resetpasswordSuccess","axios","clearCart","login","email","password","dispatch","data","post","error","_error$response","_error$response$data","response","message","clearAutherror","register","userData","config","headers","_error$response2","_error$response2$data","loaduser","get","logout","localStorage","removeItem","_error$response3","_error$response3$data","updateProfile","put","updatePassword","forgotPassword","_error$response4","_error$response4$data","resetPassword","token","concat","_error$response5","_error$response5$data","console","log"],"sources":["/home/ashwin/Documents/GitHub/Ashcart/frontend/src/actions/userActions.js"],"sourcesContent":["import { LoginRequest,LoginFail,LoginSuccess,clearError, RegisterRequest, \n    RegisterSuccess, RegisterFail, loaduserRequest, loaduserSuccess, \n    loaduserFail, logoutSuccess, logoutRequest, logoutFail, updateprofileRequest, updateprofileSuccess, updateprofileFail, updatepasswordRequest,updatepasswordFail,updatepasswordSuccess\n     ,forgotpasswordFail,forgotpasswordRequest,forgotpasswordSuccess,resetpasswordFail,resetpasswordRequest,resetpasswordSuccess} from \"../slices/authSlices\";\nimport axios from \"axios\";\nimport{ clearCart} from '../slices/cartSlice'\n\nexport const login =(email,password)=> async (dispatch)=>{\n    try{\n        dispatch(LoginRequest())\n    const { data } = await axios.post('/api/v1/login', { email, password }); // ✅ send as JSON\n\n        dispatch(LoginSuccess(data))\n    }\n    catch(error){\n        dispatch(LoginFail(error?.response?.data?.message ));\n    }\n\n}\n\nexport const clearAutherror=(dispatch)=>{\n    dispatch(clearError)\n}\n\nexport const register = (userData) => async (dispatch) => {\n\n    try {\n        dispatch(RegisterRequest())\n        const config = {\n            headers: {\n                'Content-type': 'multipart/form-data'\n            }\n        }\n\n        const { data }  = await axios.post(`/api/v1/register`,userData, config);\n        dispatch(RegisterSuccess(data))\n    } catch (error) {\n        dispatch(RegisterFail(error?.response?.data?.message))\n    }\n\n}\n\nexport const loaduser = async (dispatch) => {\n\n    try {\n        dispatch(loaduserRequest())\n       \n\n        const { data }  = await axios.get('/api/v1/myprofile');\n        dispatch(loaduserSuccess(data))\n    } catch (error) {\n        dispatch(loaduserFail(error.response.data.message))\n    }\n\n}\n\nexport const logout = async (dispatch) => {\n\n    try {\n        \n         await axios.get('/api/v1/logout');\n        dispatch(logoutSuccess());\n        dispatch(clearCart());\nlocalStorage.removeItem('cartItem');\n\n\n    } catch (error) {\n        dispatch(logoutFail(error?.response?.data?.message));\n    }\n\n}\n\nexport const updateProfile = (userData) => async (dispatch) => {\n\n    try {\n        dispatch(updateprofileRequest())\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            }\n        }\n\n        const { data }  = await axios.put(`/api/v1/myprofile/update`,userData, config);\n        dispatch(updateprofileSuccess(data))\n    } catch (error) {\n        dispatch(updateprofileFail(error.response.data.message))\n    }\n\n}\n\nexport const updatePassword = (userData) => async (dispatch) => {\n\n    try {\n        dispatch(updatepasswordRequest())\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }\n\n         await axios.put(`/api/v1/password/change`,userData);\n        dispatch(updatepasswordSuccess())\n    } catch (error) {\n        dispatch(updatepasswordFail(error.response.data.message))\n    }\n\n}\n\nexport const forgotPassword = (userData) => async (dispatch) => {\n  try {\n    dispatch(forgotpasswordRequest());\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    };\n\n    const { data } = await axios.post(`/api/v1/password/forgot`, userData, config);\n\n    dispatch(forgotpasswordSuccess(data)); // ✅ dispatch the message string\n  } catch (error) {\n    const message = error.response?.data?.message || error.message || \"Something went wrong\";\n    dispatch(forgotpasswordFail(message));\n  }\n};\n\n\n\n\nexport const resetPassword = (userData, token) => async (dispatch) => {\n  try {\n    dispatch(resetpasswordRequest());\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    };\n\n    const { data } = await axios.post(`/api/v1/password/reset/${token}`, userData, config);\n\n    dispatch(resetpasswordSuccess(data.message));  // ✅ must be data.message\n  } catch (error) {\n    const message = error.response?.data?.message || error.message || \"Something went wrong\";\n    console.log(\"Reset Password Error:\", message); // ✅ Debug line\n    dispatch(resetpasswordFail(message));\n  }\n};\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}